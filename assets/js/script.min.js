$("[data-toggle=tooltip]").tooltip();
/**
 * bs_pagination simple localization - ENGLISH
 *
 * DO NOT CHANGE this file, as it will be overwritten in next update.
 * To use different values, write and use a similar structure js file.
 *
 */
var rsc_bs_pag = {
    go_to_page_title: 'Go to page',
    rows_per_page_title: 'Rows per page',
    current_page_label: 'Page',
    current_page_abbr_label: 'p.',
    total_pages_label: 'of',
    total_pages_abbr_label: '/',
    total_rows_label: 'of',
    rows_info_records: 'records',
    go_top_text: '&laquo;',
    go_prev_text: '&larr;',
    go_next_text: '&rarr;',
    go_last_text: '&raquo;'
};
/**
 * @fileOverview bs_pagination: jQuery pagination plugin, based on Twitter Bootstrap.
 *               <p>License MIT
 *               <br />Copyright Christos Pontikis <a href="http://pontikis.net">http://pontikis.net</a>
 *               <br />Project page <a href="http://www.pontikis.net/labs/bs_pagination">http://www.pontikis.net/labs/bs_pagination</a>
 *               <br />Minified using Online YUI Compressor http://www.refresh-sf.com/yui/
 * @version 1.0.2 (09 May 2014)
 * @author Christos Pontikis http://www.pontikis.net
 * @requires jquery >= 1.8, twitter bootstrap >= 2
 */
"use strict";(function(e){var d="bs_pagination";var b={init:function(g){var h=this;return this.each(function(){var C=h.data(d);if(typeof C=="undefined"){var E="3";if(g.hasOwnProperty("bootstrap_version")&&g.bootstrap_version=="2"){E="2"}var v=b.getDefaults.call(h,E);C=e.extend({},v,g)}else{C=e.extend({},C,g)}if(C.totalRows==0){C.totalRows=C.totalPages*C.rowsPerPage}h.data(d,C);h.unbind("onChangePage").bind("onChangePage",C.onChangePage);h.unbind("onLoad").bind("onLoad",C.onLoad);var y=h.attr("id"),r=c(C.nav_list_id_prefix,y),k=c(C.nav_top_id_prefix,y),A=c(C.nav_prev_id_prefix,y),q=c(C.nav_item_id_prefix,y)+"_",o=c(C.nav_next_id_prefix,y),p=c(C.nav_last_id_prefix,y),x=c(C.nav_goto_page_id_prefix,y),B=c(C.nav_rows_per_page_id_prefix,y),m=c(C.nav_rows_info_id_prefix,y),w="",l,i,u,s,z,t,n,j,D;if(C.bootstrap_version=="3"){w+='<div class="'+C.mainWrapperClass+'">';w+='<div class="'+C.navListContainerClass+'">';w+='<div class="'+C.navListWrapperClass+'">';w+='<ul id="'+r+'" class="'+C.navListClass+'">';w+="</ul>";w+="</div>";w+="</div>";if(C.showGoToPage&&C.visiblePageLinks<C.totalPages){w+='<div class="'+C.navGoToPageContainerClass+'">';w+='<div class="input-group">';w+='<span class="input-group-addon" title="'+rsc_bs_pag.go_to_page_title+'"><i class="'+C.navGoToPageIconClass+'"></i></span>';w+='<input id="'+x+'" type="text" class="'+C.navGoToPageClass+'" title="'+rsc_bs_pag.go_to_page_title+'">';w+="</div>";w+="</div>"}if(C.showRowsPerPage){w+='<div class="'+C.navRowsPerPageContainerClass+'">';w+='<div class="input-group">';w+='<span class="input-group-addon" title="'+rsc_bs_pag.rows_per_page_title+'"><i class="'+C.navRowsPerPageIconClass+'"></i></span>';w+='<input id="'+B+'" value="'+C.rowsPerPage+'" type="text" class="'+C.navRowsPerPageClass+'" title="'+rsc_bs_pag.rows_per_page_title+'">';w+="</div>";w+="</div>"}if(C.showRowsInfo){w+='<div class="'+C.navInfoContainerClass+'">';w+='<div id="'+m+'" class="'+C.navInfoClass+'"></div>';w+="</div>"}}else{w+='<div class="'+C.mainWrapperClass+'">';w+='<div class="'+C.navListContainerClass+'">';w+='<div class="'+C.navListWrapperClass+'">';w+='<ul id="'+r+'" class="'+C.navListClass+'">';w+="</ul>";w+="</div>";w+="</div>";if((C.showGoToPage&&C.visiblePageLinks<C.totalPages)||C.showRowsPerPage){w+='<div class="'+C.navInputsContainerClass+'">';if(C.showGoToPage&&C.visiblePageLinks<C.totalPages){w+='<div class="'+C.navGoToPageWrapperClass+'">';w+='<span class="add-on" title="'+rsc_bs_pag.go_to_page_title+'"><i class="'+C.navGoToPageIconClass+'"></i></span>';w+='<input id="'+x+'" type="text" class="'+C.navGoToPageClass+'" title="'+rsc_bs_pag.go_to_page_title+'">';w+="</div>"}if(C.showRowsPerPage){w+='<div class="'+C.navRowsPerPageWrapperClass+'">';w+='<span class="add-on" title="'+rsc_bs_pag.rows_per_page_title+'"><i class="'+C.navRowsPerPageIconClass+'"></i></span>';w+='<input id="'+B+'" value="'+C.rowsPerPage+'" type="text" class="'+C.navRowsPerPageClass+'" title="'+rsc_bs_pag.rows_per_page_title+'">';w+="</div>"}w+="</div>"}if(C.showRowsInfo){w+='<div class="'+C.navInfoContainerClass+'">';w+='<div id="'+m+'" class="'+C.navInfoClass+'"></div>';w+="</div>"}}w+="</div>";h.html(w);l=null;i=C.currentPage;f(y,l,i,true,false);h.removeClass().addClass(C.containerClass);if(!C.directURL){u="#"+k;h.off("click",u).on("click",u,function(){var G=C.currentPage;C.currentPage=1;var F=C.currentPage;f(y,G,F,true,true)});s="#"+A;h.off("click",s).on("click",s,function(){if(C.currentPage>1){var G=C.currentPage;C.currentPage=parseInt(C.currentPage)-1;var F=C.currentPage;var H=(h.data("nav_start")==G);f(y,G,F,H,true)}});t="#"+o;h.off("click",t).on("click",t,function(){if(C.currentPage<C.totalPages){var G=C.currentPage;C.currentPage=parseInt(C.currentPage)+1;var F=C.currentPage;var H=(h.data("nav_end")==G);f(y,G,F,H,true)}});n="#"+p;h.off("click",n).on("click",n,function(){var G=C.currentPage;C.currentPage=parseInt(C.totalPages);var F=C.currentPage;f(y,G,F,true,true)});z='[id^="'+q+'"]';h.off("click",z).on("click",z,function(I){var H=C.currentPage;var F=q.length;C.currentPage=parseInt(e(I.target).attr("id").substr(F));var G=C.currentPage;f(y,H,G,false,true)})}if(C.showGoToPage){j="#"+x;h.off("keypress",j).on("keypress",j,function(I){if(I.which===13){var H=parseInt(e(j).val());e(j).val("");if(!isNaN(H)&&H>0){if(H>C.totalPages){H=C.totalPages}var G=C.currentPage;C.currentPage=H;var F=H;if(C.directURL){location.href=C.directURL(F)}else{f(y,G,F,true,true)}}I.preventDefault()}else{if(!(I.which===8||I.which===0||(I.shiftKey===false&&(I.which>47&&I.which<58)))){I.preventDefault()}}})}if(C.showRowsPerPage){D="#"+B;h.off("keypress",D).on("keypress",D,function(H){if(H.which===13){var I=parseInt(e(D).val());if(!isNaN(I)&&I>0){if(I>C.maxRowsPerPage){I=C.maxRowsPerPage}e(D).val(I);C.rowsPerPage=I;C.totalPages=Math.ceil(C.totalRows/C.rowsPerPage);var G=C.currentPage;C.currentPage=1;var F=1;if(C.directURL){location.href=C.directURL(F)}else{f(y,G,F,true,true)}}else{D.val(C.rowsPerPage)}H.preventDefault()}else{if(!(H.which===8||H.which===0||(H.shiftKey===false&&(H.which>47&&H.which<58)))){H.preventDefault()}}})}})},getVersion:function(){return"1.0.2"},getDefaults:function(h){var g={currentPage:1,rowsPerPage:10,maxRowsPerPage:100,totalPages:100,totalRows:0,visiblePageLinks:5,showGoToPage:true,showRowsPerPage:true,showRowsInfo:true,showRowsDefaultInfo:true,directURL:false,disableTextSelectionInNavPane:true,bootstrap_version:"3",containerClass:"well",mainWrapperClass:"row",navListContainerClass:"col-xs-12 col-sm-12 col-md-6",navListWrapperClass:"",navListClass:"pagination pagination_custom",navListActiveItemClass:"active",navGoToPageContainerClass:"col-xs-6 col-sm-4 col-md-2 row-space",navGoToPageIconClass:"glyphicon glyphicon-arrow-right",navGoToPageClass:"form-control small-input",navRowsPerPageContainerClass:"col-xs-6 col-sm-4 col-md-2 row-space",navRowsPerPageIconClass:"glyphicon glyphicon-th-list",navRowsPerPageClass:"form-control small-input",navInfoContainerClass:"col-xs-12 col-sm-4 col-md-2 row-space",navInfoClass:"",nav_list_id_prefix:"nav_list_",nav_top_id_prefix:"top_",nav_prev_id_prefix:"prev_",nav_item_id_prefix:"nav_item_",nav_next_id_prefix:"next_",nav_last_id_prefix:"last_",nav_goto_page_id_prefix:"goto_page_",nav_rows_per_page_id_prefix:"rows_per_page_",nav_rows_info_id_prefix:"rows_info_",onChangePage:function(){},onLoad:function(){}};if(h=="2"){g.bootstrap_version="2";g.containerClass="well";g.mainWrapperClass="row-fluid";g.navListContainerClass="span6";g.navListWrapperClass="pagination pagination_custom";g.navListClass="";g.navListActiveItemClass="active";g.navInputsContainerClass="span4 row-space";g.navGoToPageWrapperClass="input-prepend goto_page_wrapper";g.navGoToPageIconClass="icon-arrow-right";g.navGoToPageClass="small-input";g.navRowsPerPageWrapperClass="input-prepend rows_per_page_wrapper";g.navRowsPerPageIconClass="icon-th-list";g.navRowsPerPageClass="small-input";g.navInfoContainerClass="span2 row-space";g.navInfoClass=""}return g},getOption:function(g){var h=this;return h.data(d)[g]},getAllOptions:function(){var g=this;return g.data(d)},destroy:function(){var g=this;g.removeData()},setRowsInfo:function(g){var h=this,i=c(b.getOption.call(h,"getOption","nav_rows_info_id_prefix"),h.attr("id"));e("#"+i).html(g)}};var c=function(h,g){return h+g};var f=function(F,k,g,J,u){var I=e("#"+F),B=b.getAllOptions.call(I),t=c(B.nav_item_id_prefix,F)+"_";if(J){var l=c(B.nav_list_id_prefix,F),h=c(B.nav_top_id_prefix,F),H=c(B.nav_prev_id_prefix,F),m=c(B.nav_next_id_prefix,F),r=c(B.nav_last_id_prefix,F),v=e("#"+l),G="",z=parseInt(B.currentPage),x,E,L,q,C,y="",w="javascript:void(0);";if(B.totalPages<B.visiblePageLinks){z=1;x=B.totalPages}else{C=Math.ceil(B.totalPages/B.visiblePageLinks);if(z>B.visiblePageLinks*(C-1)){z=B.totalPages-B.visiblePageLinks+1}else{L=z%B.visiblePageLinks;q=L==0?-B.visiblePageLinks+1:-L+1;z+=q}x=z+B.visiblePageLinks-1}I.data("nav_start",z);I.data("nav_end",x);if(z>1){y=B.directURL?B.directURL(1):w;G+='<li><a id="'+h+'" href="'+y+'">'+rsc_bs_pag.go_top_text+"</a></li>";y=B.directURL?B.directURL(z-1):w;G+='<li><a id="'+H+'" href="'+y+'">'+rsc_bs_pag.go_prev_text+"</a></li>"}for(E=z;E<=x;E++){y=B.directURL?B.directURL(E):w;G+='<li><a id="'+t+E+'" href="'+y+'">'+E+"</a></li>"}if(x<B.totalPages){y=B.directURL?B.directURL(x+1):w;G+='<li><a id="'+m+'" href="'+y+'">'+rsc_bs_pag.go_next_text+"</a></li>";y=B.directURL?B.directURL(B.totalPages):w;G+='<li><a id="'+r+'" href="'+y+'">'+rsc_bs_pag.go_last_text+"</a></li>"}v.html(G);if(B.disableTextSelectionInNavPane){a(v)}}var p=e("#"+t+k),K=e("#"+t+g);p.closest("li").removeClass(B.navListActiveItemClass);K.closest("li").addClass(B.navListActiveItemClass);var D=rsc_bs_pag.current_page_label+" "+g+" "+rsc_bs_pag.total_pages_label+" "+B.totalPages;p.prop("title","");K.prop("title",D);if(B.showRowsInfo&&B.showRowsDefaultInfo){var o=((B.currentPage-1)*B.rowsPerPage)+1,n=Math.min(o+B.rowsPerPage-1,B.totalRows),A=o+"-"+n+" "+rsc_bs_pag.total_rows_label+" "+B.totalRows+" "+rsc_bs_pag.rows_info_records+" ("+rsc_bs_pag.current_page_abbr_label+B.currentPage+rsc_bs_pag.total_pages_abbr_label+B.totalPages+")",j=c(B.nav_rows_info_id_prefix,F);e("#"+j).html(A)}if(u){I.triggerHandler("onChangePage",{currentPage:g,rowsPerPage:B.rowsPerPage})}else{I.triggerHandler("onLoad",{currentPage:g,rowsPerPage:B.rowsPerPage})}};var a=function(g){return g.attr("unselectable","on").css("user-select","none").on("selectstart",false)};e.fn.bs_pagination=function(h){if(this.size()!=1){var g="You must use this plugin ("+d+") with a unique element (at once)";this.html('<span style="color: red;">ERROR: '+g+"</span>");e.error(g)}if(b[h]){return b[h].apply(this,Array.prototype.slice.call(arguments,1))}else{if(typeof h==="object"||!h){return b.init.apply(this,arguments)}else{e.error("Method "+h+" does not exist on jQuery."+d)}}}})(jQuery);
/*!
 * jQuery pagination plugin v1.4
 * http://esimakin.github.io/twbs-pagination/
 *
 * Copyright 2014-2016, Eugene Simakin
 * Released under Apache 2.0 license
 * http://apache.org/licenses/LICENSE-2.0.html
 */
(function ($, window, document, undefined) {

    'use strict';

    var old = $.fn.twbsPagination;

    // PROTOTYPE AND CONSTRUCTOR

    var TwbsPagination = function (element, options) {
        this.$element = $(element);
        this.options = $.extend({}, $.fn.twbsPagination.defaults, options);

        if (this.options.startPage < 1 || this.options.startPage > this.options.totalPages) {
            throw new Error('Start page option is incorrect');
        }

        this.options.totalPages = parseInt(this.options.totalPages);
        if (isNaN(this.options.totalPages)) {
            throw new Error('Total pages option is not correct!');
        }

        this.options.visiblePages = parseInt(this.options.visiblePages);
        if (isNaN(this.options.visiblePages)) {
            throw new Error('Visible pages option is not correct!');
        }

        if (this.options.onPageClick instanceof Function) {
            this.$element.first().on('page', this.options.onPageClick);
        }

        // hide if only one page exists
        if (this.options.hideOnlyOnePage && this.options.totalPages == 1) {
            this.$element.trigger('page', 1);
            return this;
        }

        if (this.options.totalPages < this.options.visiblePages) {
            this.options.visiblePages = this.options.totalPages;
        }

        if (this.options.href) {
            this.options.startPage = this.getPageFromQueryString();
            if (!this.options.startPage) {
                this.options.startPage = 1;
            }
        }

        var tagName = (typeof this.$element.prop === 'function') ?
            this.$element.prop('tagName') : this.$element.attr('tagName');

        if (tagName === 'UL') {
            this.$listContainer = this.$element;
        } else {
            this.$listContainer = $('<ul></ul>');
        }

        this.$listContainer.addClass(this.options.paginationClass);

        if (tagName !== 'UL') {
            this.$element.append(this.$listContainer);
        }

        if (this.options.initiateStartPageClick) {
            this.show(this.options.startPage);
        } else {
            this.render(this.getPages(this.options.startPage));
            this.setupEvents();
        }

        return this;
    };

    TwbsPagination.prototype = {

        constructor: TwbsPagination,

        destroy: function () {
            this.$element.empty();
            this.$element.removeData('twbs-pagination');
            this.$element.off('page');

            return this;
        },

        show: function (page) {
            if (page < 1 || page > this.options.totalPages) {
                throw new Error('Page is incorrect.');
            }
            this.currentPage = page;

            this.render(this.getPages(page));
            this.setupEvents();

            this.$element.trigger('page', page);

            return this;
        },

        buildListItems: function (pages) {
            var listItems = [];

            if (this.options.first) {
                listItems.push(this.buildItem('first', 1));
            }

            if (this.options.prev) {
                var prev = pages.currentPage > 1 ? pages.currentPage - 1 : this.options.loop ? this.options.totalPages  : 1;
                listItems.push(this.buildItem('prev', prev));
            }

            for (var i = 0; i < pages.numeric.length; i++) {
                listItems.push(this.buildItem('page', pages.numeric[i]));
            }

            if (this.options.next) {
                var next = pages.currentPage < this.options.totalPages ? pages.currentPage + 1 : this.options.loop ? 1 : this.options.totalPages;
                listItems.push(this.buildItem('next', next));
            }

            if (this.options.last) {
                listItems.push(this.buildItem('last', this.options.totalPages));
            }

            return listItems;
        },

        buildItem: function (type, page) {
            var $itemContainer = $('<li></li>'),
                $itemContent = $('<a></a>'),
                itemText = this.options[type] ? this.makeText(this.options[type], page) : page;

            $itemContainer.addClass(this.options[type + 'Class']);
            $itemContainer.data('page', page);
            $itemContainer.data('page-type', type);
            $itemContainer.append($itemContent.attr('href', this.makeHref(page)).addClass(this.options.anchorClass).html(itemText));

            return $itemContainer;
        },

        getPages: function (currentPage) {
            var pages = [];

            var half = Math.floor(this.options.visiblePages / 2);
            var start = currentPage - half + 1 - this.options.visiblePages % 2;
            var end = currentPage + half;

            // handle boundary case
            if (start <= 0) {
                start = 1;
                end = this.options.visiblePages;
            }
            if (end > this.options.totalPages) {
                start = this.options.totalPages - this.options.visiblePages + 1;
                end = this.options.totalPages;
            }

            var itPage = start;
            while (itPage <= end) {
                pages.push(itPage);
                itPage++;
            }

            return {"currentPage": currentPage, "numeric": pages};
        },

        render: function (pages) {
            var _this = this;
            this.$listContainer.children().remove();
            var items = this.buildListItems(pages);
            jQuery.each(items, function(key, item){
                _this.$listContainer.append(item);
            });

            this.$listContainer.children().each(function () {
                var $this = $(this),
                    pageType = $this.data('page-type');

                switch (pageType) {
                    case 'page':
                        if ($this.data('page') === pages.currentPage) {
                            $this.addClass(_this.options.activeClass);
                        }
                        break;
                    case 'first':
                            $this.toggleClass(_this.options.disabledClass, pages.currentPage === 1);
                        break;
                    case 'last':
                            $this.toggleClass(_this.options.disabledClass, pages.currentPage === _this.options.totalPages);
                        break;
                    case 'prev':
                            $this.toggleClass(_this.options.disabledClass, !_this.options.loop && pages.currentPage === 1);
                        break;
                    case 'next':
                            $this.toggleClass(_this.options.disabledClass,
                                !_this.options.loop && pages.currentPage === _this.options.totalPages);
                        break;
                    default:
                        break;
                }

            });
        },

        setupEvents: function () {
            var _this = this;
            this.$listContainer.off('click').on('click', 'li', function (evt) {
                var $this = $(this);
                if ($this.hasClass(_this.options.disabledClass) || $this.hasClass(_this.options.activeClass)) {
                    return false;
                }
                // Prevent click event if href is not set.
                !_this.options.href && evt.preventDefault();
                _this.show(parseInt($this.data('page')));
            });
        },

        makeHref: function (page) {
            return this.options.href ? this.generateQueryString(page) : "#";
        },

        makeText: function (text, page) {
            return text.replace(this.options.pageVariable, page)
                .replace(this.options.totalPagesVariable, this.options.totalPages)
        },
        getPageFromQueryString: function (searchStr) {
            var search = this.getSearchString(searchStr),
                regex = new RegExp(this.options.pageVariable + '(=([^&#]*)|&|#|$)'),
                page = regex.exec(search);
            if (!page || !page[2]) {
                return null;
            }
            page = decodeURIComponent(page[2]);
            page = parseInt(page);
            if (isNaN(page)) {
                return null;
            }
            return page;
        },
        generateQueryString: function (pageNumber, searchStr) {
            var search = this.getSearchString(searchStr),
                regex = new RegExp(this.options.pageVariable + '=*[^&#]*');
            if (!search) return '';
            return '?' + search.replace(regex, this.options.pageVariable + '=' + pageNumber);

        },
        getSearchString: function (searchStr) {
            var search = searchStr || window.location.search;
            if (search === '') {
                return null;
            }
            if (search.indexOf('?') === 0) search = search.substr(1);
            return search;
        }

    };

    // PLUGIN DEFINITION

    $.fn.twbsPagination = function (option) {
        var args = Array.prototype.slice.call(arguments, 1);
        var methodReturn;

        var $this = $(this);
        var data = $this.data('twbs-pagination');
        var options = typeof option === 'object' ? option : {};

        if (!data) $this.data('twbs-pagination', (data = new TwbsPagination(this, options) ));
        if (typeof option === 'string') methodReturn = data[ option ].apply(data, args);

        return ( methodReturn === undefined ) ? $this : methodReturn;
    };

    $.fn.twbsPagination.defaults = {
        totalPages: 1,
        startPage: 1,
        visiblePages: 5,
        initiateStartPageClick: true,
        hideOnlyOnePage: false,
        href: false,
        pageVariable: '{{page}}',
        totalPagesVariable: '{{total_pages}}',
        page: null,
        first: 'First',
        prev: 'Previous',
        next: 'Next',
        last: 'Last',
        loop: false,
        onPageClick: null,
        paginationClass: 'pagination',
        nextClass: 'page-item next',
        prevClass: 'page-item prev',
        lastClass: 'page-item last',
        firstClass: 'page-item first',
        pageClass: 'page-item',
        activeClass: 'active',
        disabledClass: 'disabled',
        anchorClass: 'page-link'
    };

    $.fn.twbsPagination.Constructor = TwbsPagination;

    $.fn.twbsPagination.noConflict = function () {
        $.fn.twbsPagination = old;
        return this;
    };

    $.fn.twbsPagination.version = "1.4";

})(window.jQuery, window, document);
(() => {
    $('#mm-example-1').metisMenu();
})();
$(function(){

    // Initializing the swiper plugin for the slider.
    // Read more here: http://idangero.us/swiper/api/
    
    var mySwiper = new Swiper ('.swiper-container', {
        loop: true,
        pagination: '.swiper-pagination',
        paginationClickable: true,
        nextButton: '.swiper-button-next',
        prevButton: '.swiper-button-prev'
    });
    
});
$('#carousel-1').carousel({
        interval: 10000
})
function getPageList(totalPages, page, maxLength) {
  if (maxLength < 5) throw "maxLength must be at least 5";

  function range(start, end) {
    return Array.from(Array(end - start + 1), (_, i) => i + start);
  }

  var sideWidth = maxLength < 9 ? 1 : 2;
  var leftWidth = (maxLength - sideWidth * 2 - 3) >> 1;
  var rightWidth = (maxLength - sideWidth * 2 - 2) >> 1;
  if (totalPages <= maxLength) {
    // no breaks in list
    return range(1, totalPages);
  }
  if (page <= maxLength - sideWidth - 1 - rightWidth) {
    // no break on left of page
    return range(1, maxLength - sideWidth - 1)
      .concat([0])
      .concat(range(totalPages - sideWidth + 1, totalPages));
  }
  if (page >= totalPages - sideWidth - 1 - rightWidth) {
    // no break on right of page
    return range(1, sideWidth)
      .concat([0])
      .concat(
        range(totalPages - sideWidth - 1 - rightWidth - leftWidth, totalPages)
      );
  }
  // Breaks on both sides
  return range(1, sideWidth)
    .concat([0])
    .concat(range(page - leftWidth, page + rightWidth))
    .concat([0])
    .concat(range(totalPages - sideWidth + 1, totalPages));
}

$(function() {
  // Number of items and limits the number of items per page
  var numberOfItems = $("#jar .content").length;
  var limitPerPage = 6;
  // Total pages rounded upwards
  var totalPages = Math.ceil(numberOfItems / limitPerPage);
  // Number of buttons at the top, not counting prev/next,
  // but including the dotted buttons.
  // Must be at least 5:
  var paginationSize = 7;
  var currentPage;

  function showPage(whichPage) {
    if (whichPage < 1 || whichPage > totalPages) return false;
    currentPage = whichPage;
    $("#jar .content")
      .hide()
      .slice((currentPage - 1) * limitPerPage, currentPage * limitPerPage)
      .show();
    // Replace the navigation items (not prev/next):
    $(".pagination li").slice(1, -1).remove();
    getPageList(totalPages, currentPage, paginationSize).forEach(item => {
      $("<li>")
        .addClass(
          "page-item " +
            (item ? "current-page " : "") +
            (item === currentPage ? "active " : "")
        )
        .append(
          $("<a>")
            .addClass("page-link")
            .attr({
              href: "javascript:void(0)"
            })
            .text(item || "...")
        )
        .insertBefore("#next-page");
    });
    return true;
  }

  // Include the prev/next buttons:
  $(".pagination").append(
    $("<li>").addClass("page-item").attr({ id: "previous-page" }).append(
      $("<a>")
        .addClass("page-link")
        .attr({
          href: "javascript:void(0)"
        })
        .text("Prev")
    ),
    $("<li>").addClass("page-item").attr({ id: "next-page" }).append(
      $("<a>")
        .addClass("page-link")
        .attr({
          href: "javascript:void(0)"
        })
        .text("Next")
    )
  );
  // Show the page links
  $("#jar").show();
  showPage(1);

  // Use event delegation, as these items are recreated later
  $(
    document
  ).on("click", ".pagination li.current-page:not(.active)", function() {
    return showPage(+$(this).text());
  });
  $("#next-page").on("click", function() {
    return showPage(currentPage + 1);
  });

  $("#previous-page").on("click", function() {
    return showPage(currentPage - 1);
  });
  $(".pagination").on("click", function() {
    $("html,body").animate({ scrollTop: 0 }, 0);
  });
});

$(window).scroll(function() {
    
  if ($(document).scrollTop() > 50) {
    $('.navbar').removeClass('navbar-transparent');
    $('.navbar').addClass('bg-dark');
  } else {
    $('.navbar').addClass('navbar-transparent');
    $('.navbar').removeClass('bg-dark');
  }
});

var $textInput = $('#q');
$textInput.addClass('placeholderred');


